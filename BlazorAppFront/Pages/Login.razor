@page "/login"
@inject HttpClient Http
@inject IJSRuntime jsr
@using BlazorAppFront.Services
@using ShareLib

@inject UserServices UserService

<h3>Login</h3>

@if (!string.IsNullOrEmpty(message))
{
	<div class="alert @(message.Contains("successful") ? "alert-success" : "alert-danger")">
		@message
	</div>
}

<EditForm Model="user" OnValidSubmit="OnValid" style="max-width:500px;">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="mb-2">
		<InputText class="form-control" @bind-Value="user.email" placeholder="Enter Email"></InputText>
	</div>
	<div class="mb-2">
		<InputText type="password" class="form-control" @bind-Value="user.password" placeholder="Enter Password"></InputText>
	</div>
	<div class="mb-2 text-right">
		<button class="btn btn-secondary" disabled="@isDisabled">login</button>
	</div>
</EditForm>

@code {
	
	LoginDto user = new LoginDto();
	string message = string.Empty;
	bool isDisabled = false;

	private async Task OnValid()
	{
		isDisabled = true;
		try
		{
			var result = await UserService.loginAct(user);
			message = result.message;
			if (result.success)
			{
				await jsr.InvokeVoidAsync("localStorage.setItem", "user", $"{result.email};{result.jwtBearer}");
			}
		}
		catch (Exception ex)
		{
			message = $"Error: {ex.Message}";
		}
		finally
		{
			isDisabled = false;
		}
	}
}